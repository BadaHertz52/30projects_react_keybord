{"version":3,"file":"bundle.js","mappings":"yBAEA,ICFO,MACL,GACA,GACA,GACA,GACA,GACA,GAEA,IAAY,EACZ,IAAa,EACbA,cACEC,MAAK,IACLA,MAAK,GACP,CAEA,KACEA,MAAK,EAAeC,SAASC,eAAe,aAC5CF,MAAK,EAAYA,MAAK,EAAaG,cAAc,WACjDH,MAAK,EAAgBA,MAAK,EAAaG,cAAc,SACrDH,MAAK,EAAcA,MAAK,EAAaG,cAAc,aACnDH,MAAK,EAAgBA,MAAK,EAAaG,cAAc,gBACrDH,MAAK,EAAWA,MAAK,EAAcG,cAAc,SACnD,CAEA,KACEH,MAAK,EAAUI,iBAAiB,SAAUJ,MAAK,GAC/CA,MAAK,EAAcI,iBAAiB,SAAUJ,MAAK,GACnDC,SAASG,iBAAiB,UAAWJ,MAAK,EAAWK,KAAKL,OAC1DC,SAASG,iBAAiB,QAASJ,MAAK,EAASK,KAAKL,OACtDA,MAAK,EAASI,iBAAiB,QAASJ,MAAK,GAC7CA,MAAK,EAAYI,iBACf,YACAJ,MAAK,EAAaK,KAAKL,OAEzBC,SAASG,iBAAiB,UAAWJ,MAAK,EAAWK,KAAKL,MAC5D,CAEA,GAAWM,GACT,GAAIN,MAAK,EAAW,OACpBA,MAAK,GAAa,EAClB,MAAMO,EAAQD,EAAME,OAAOC,QAAQ,WAC7BC,IAAaH,GAAOI,UAAUC,SAAS,UACvCC,EAAMN,GAAOO,QAAQD,IACvBH,GAAcG,GAAe,UAARA,GAA2B,cAARA,IAC1Cb,MAAK,EAASe,OAASF,GAErBH,GAAoB,UAARG,IACdb,MAAK,EAASe,OAAS,KAErBL,GAAoB,cAARG,IACdb,MAAK,EAASe,MAAQf,MAAK,EAASe,MAAMC,MAAM,GAAI,IAEtDhB,MAAK,EAAYG,cAAc,YAAYQ,UAAUM,OAAO,SAC9D,CAEA,GAAaX,GACPN,MAAK,IACTA,MAAK,GAAa,EAClBM,EAAME,OAAOC,QAAQ,YAAYE,UAAUO,IAAI,UACjD,CAEA,GAASZ,GACPA,EAAME,OAAOO,MAAQT,EAAME,OAAOO,MAAMI,QAAQ,gBAAiB,GACnE,CAEA,GAAWb,GACLN,MAAK,IACTA,MAAK,GAAY,EACjBA,MAAK,EAAcW,UAAUS,OAC3B,QACc,YAAdd,EAAMe,KAAqB,gBAAgBC,KAAKhB,EAAMe,MAGxDrB,MAAK,EACFG,cAAc,cAAcG,EAAMiB,UACjCZ,UAAUO,IAAI,UACpB,CAEA,GAASZ,GACHN,MAAK,IACTA,MAAK,GAAY,EACjBA,MAAK,EACFG,cAAc,cAAcG,EAAMiB,UACjCZ,UAAUM,OAAO,UACvB,CAEA,GAAeX,GACbL,SAASuB,gBAAgBC,aACvB,QACAnB,EAAME,OAAOkB,QAAU,YAAc,GAEzC,CAEA,GAAcpB,GACZL,SAAS0B,KAAKC,MAAMC,WAAavB,EAAME,OAAOO,KAChD,E","sources":["webpack://keybord/./src/js/index.js","webpack://keybord/./src/js/keybord.js"],"sourcesContent":["import \"../css/style.css\";\r\nimport { Keyboard } from \"./keybord\";\r\nnew Keyboard();\r\n","export class Keyboard {\r\n  #switchEl;\r\n  #fontSelectEl;\r\n  #containerEl;\r\n  #keyboardEl;\r\n  #inputGroupEl;\r\n  #inputEl;\r\n  //마우스와 키보드 동시에 작동하지 못하도록\r\n  #keyPress = false;\r\n  #mouseDown = false;\r\n  constructor() {\r\n    this.#assignElement();\r\n    this.#addEvent();\r\n  }\r\n\r\n  #assignElement() {\r\n    this.#containerEl = document.getElementById(\"container\");\r\n    this.#switchEl = this.#containerEl.querySelector(\"#switch\");\r\n    this.#fontSelectEl = this.#containerEl.querySelector(\"#font\");\r\n    this.#keyboardEl = this.#containerEl.querySelector(\"#keyboard\");\r\n    this.#inputGroupEl = this.#containerEl.querySelector(\"#input-group\");\r\n    this.#inputEl = this.#inputGroupEl.querySelector(\"#input\");\r\n  }\r\n\r\n  #addEvent() {\r\n    this.#switchEl.addEventListener(\"change\", this.#onChangeTheme);\r\n    this.#fontSelectEl.addEventListener(\"change\", this.#onChangeFont);\r\n    document.addEventListener(\"keydown\", this.#onKeyDown.bind(this));\r\n    document.addEventListener(\"keyup\", this.#onKeyUp.bind(this));\r\n    this.#inputEl.addEventListener(\"input\", this.#onInput);\r\n    this.#keyboardEl.addEventListener(\r\n      \"mousedown\",\r\n      this.#onMouseDown.bind(this)\r\n    );\r\n    document.addEventListener(\"mouseup\", this.#onMouseUp.bind(this));\r\n  }\r\n\r\n  #onMouseUp(event) {\r\n    if (this.#keyPress) return;\r\n    this.#mouseDown = false;\r\n    const keyEl = event.target.closest(\"div.key\");\r\n    const isActive = !!keyEl?.classList.contains(\"active\");\r\n    const val = keyEl?.dataset.val;\r\n    if (isActive && !!val && val !== \"Space\" && val !== \"Backspace\") {\r\n      this.#inputEl.value += val;\r\n    }\r\n    if (isActive && val === \"Space\") {\r\n      this.#inputEl.value += \" \";\r\n    }\r\n    if (isActive && val === \"Backspace\") {\r\n      this.#inputEl.value = this.#inputEl.value.slice(0, -1);\r\n    }\r\n    this.#keyboardEl.querySelector(\".active\")?.classList.remove(\"active\");\r\n  }\r\n\r\n  #onMouseDown(event) {\r\n    if (this.#keyPress) return;\r\n    this.#mouseDown = true;\r\n    event.target.closest(\"div.key\")?.classList.add(\"active\");\r\n  }\r\n\r\n  #onInput(event) {\r\n    event.target.value = event.target.value.replace(/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/, \"\");\r\n  }\r\n\r\n  #onKeyDown(event) {\r\n    if (this.#mouseDown) return;\r\n    this.#keyPress = true;\r\n    this.#inputGroupEl.classList.toggle(\r\n      \"error\",\r\n      event.key === \"Process\" || /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/.test(event.key)\r\n    );\r\n\r\n    this.#keyboardEl\r\n      .querySelector(`[data-code=${event.code}]`)\r\n      ?.classList.add(\"active\");\r\n  }\r\n\r\n  #onKeyUp(event) {\r\n    if (this.#mouseDown) return;\r\n    this.#keyPress = false;\r\n    this.#keyboardEl\r\n      .querySelector(`[data-code=${event.code}]`)\r\n      ?.classList.remove(\"active\");\r\n  }\r\n\r\n  #onChangeTheme(event) {\r\n    document.documentElement.setAttribute(\r\n      \"theme\",\r\n      event.target.checked ? \"dark-mode\" : \"\"\r\n    );\r\n  }\r\n\r\n  #onChangeFont(event) {\r\n    document.body.style.fontFamily = event.target.value;\r\n  }\r\n}\r\n"],"names":["constructor","this","document","getElementById","querySelector","addEventListener","bind","event","keyEl","target","closest","isActive","classList","contains","val","dataset","value","slice","remove","add","replace","toggle","key","test","code","documentElement","setAttribute","checked","body","style","fontFamily"],"sourceRoot":""}